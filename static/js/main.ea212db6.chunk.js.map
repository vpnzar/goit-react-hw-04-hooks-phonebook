{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/ContactForm/ContactForm.js","App.js","index.js"],"names":["module","exports","ContactList","contacts","onDeleteId","className","s","ContactsList","map","name","id","number","onClick","Filter","filterVal","onChange","htmlFor","type","value","pattern","title","ContactForm","props","useState","setName","setNumber","options","inputNameId","uuidv4","inputNumberId","handleChangeEvent","e","target","Phonebook","onSubmit","preventDefault","required","App","setContacts","filter","setFilter","inputContactSearch","useMemo","searchValue","toLowerCase","contact","includes","useEffect","contactsLocal","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","data","some","alert","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea212db6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactList_ContactsList__3pCqZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1yUX-\"};","import React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteId }) => {\r\n  return (\r\n    <div className={s.ContactsList}>\r\n      <ul>\r\n        {contacts.map(({ name, id, number }) => (\r\n          <li key={id}>\r\n            <p>{name + ': ' + number}</p>\r\n            <button onClick={() => onDeleteId(id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteId: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filterVal, onChange }) => {\r\n  return (\r\n    <div className={s.Filter}>\r\n      <label htmlFor=\"\">Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={filterVal}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterVal: PropTypes.object,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ContactForm(props) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const options = { name, number };\r\n  const inputNameId = uuidv4();\r\n  const inputNumberId = uuidv4();\r\n\r\n  const handleChangeEvent = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = e.target;\r\n    props.onSubmit(options);\r\n    name.value = '';\r\n    number.value = '';\r\n  };\r\n\r\n  return (\r\n    <div className={s.Phonebook}>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor={inputNameId}>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={inputNameId}\r\n          onChange={handleChangeEvent}\r\n        />\r\n        <label htmlFor={inputNumberId}>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={inputNumberId}\r\n          onChange={handleChangeEvent}\r\n        />\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import './App.css';\nimport { useState, useEffect, useMemo } from 'react';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandle = data => {\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    const result = contacts.some(value => value.name === contact.name);\n    if (!result) {\n      setContacts([...contacts, contact]);\n    } else alert(`${contact.name} is already in contacts`);\n  };\n\n  const inputSearchChange = e => setFilter(e.target.value);\n\n  const inputContactSearch = useMemo(() => {\n    let searchValue = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(searchValue),\n    );\n  }, [filter, contacts]);\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  useEffect(() => {\n    const contactsLocal = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contactsLocal);\n    setContacts(parsedContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandle} />\n      <h1>Contacts</h1>\n      <Filter value={filter} onChange={inputSearchChange} />\n      <ContactList contacts={inputContactSearch} onDeleteId={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}